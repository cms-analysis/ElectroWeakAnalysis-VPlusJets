[CRAB]

jobtype = cmssw
#scheduler = glite
#scheduler = condor
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari
#use_server = 1
#server_name = 
#
scheduler= condor
#use_server= 1
#server_name= cern

[CMSSW]

### The data you want to access (to be found on DBS)
#datasetpath=/WZ_TuneZ2star_8TeV_pythia6_tauola/ajkumar-SQWaT_PAT_52X_Summer12_v1-f3d54d944c04e00184494fdd98ddcb68/USER
#datasetpath=/TTJets_TuneZ2star_8TeV-madgraph-tauola/ajkumar-SQWaT_PAT_52X_Summer12_v1-f3d54d944c04e00184494fdd98ddcb68/USER

#dbs_url = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_01_writer/servlet/DBSServlet

### Splitting parameters
#total_number_of_events=-1
#total_number_of_events=10
#events_per_job = 50000
#number_of_jobs = 400

#data
#lumi_mask = json/Cert_190456-208357_8TeV_PromptReco_Collisions12_JSON.txt
total_number_of_lumis = -1
lumis_per_job = 20

[USER]
#additional_input_files = QG_QCD_Pt_15to3000_TuneZ2_Flat_7TeV_pythia6_Spring11-PU_S1_START311_V1G1-v1.root,START53_V7E_L1FastJet_AK5PFchs.txt,START53_V7E_L1FastJet_AK7PFchs.txt,START53_V7E_L2L3Residual_AK5PFchs.txt,START53_V7E_L2L3Residual_AK7PFchs.txt,START53_V7E_L2Relative_AK5PFchs.txt,START53_V7E_L2Relative_AK7PFchs.txt,START53_V7E_L3Absolute_AK5PFchs.txt,START53_V7E_L3Absolute_AK7PFchs.txt,START53_V7E_Uncertainty_AK5PFchs.txt,START53_V7E_Uncertainty_AK7PFchs.txt

additional_input_files=QG_QCD_Pt_15to3000_TuneZ2_Flat_7TeV_pythia6_Spring11-PU_S1_START311_V1G1-v1.root,START53_V15_L1FastJet_AK5PFchs.txt,START53_V15_L1FastJet_AK5PFchs.txt,START53_V15_L1Offset_AK5PFchs.txt,START53_V15_L1Offset_AK7PFchs.txt,START53_V15_L2L3Residual_AK5PFchs.txt,START53_V15_L2L3Residual_AK7PFchs.txt,START53_V15_L2Relative_AK5PFchs.txt,START53_V15_L2Relative_AK7PFchs.txt,START53_V15_L3Absolute_AK5PFchs.txt,START53_V15_L3Absolute_AK7PFchs.txt, START53_V15_Uncertainty_AK5PFchs.txt,START53_V15_Uncertainty_AK7PFchs.txt,FT_53_V10_AN3_L1FastJet_AK5PFchs.txt,FT_53_V10_AN3_L1FastJet_AK7PFchs.txt,FT_53_V10_AN3_L1Offset_AK5PFchs.txt,FT_53_V10_AN3_L1Offset_AK7PFchs.txt, FT_53_V10_AN3_L2L3Residual_AK5PFchs.txt,FT_53_V10_AN3_L2L3Residual_AK7PFchs.txt,FT_53_V10_AN3_L2Relative_AK5PFchs.txt,FT_53_V10_AN3_L2Relative_AK7PFchs.txt,FT_53_V10_AN3_L3Absolute_AK5PFchs.txt,FT_53_V10_AN3_L3Absolute_AK7PFchs.txt,FT_53_V10_AN3_Uncertainty_AK5PFchs.txt,FT_53_V10_AN3_Uncertainty_AK7PFchs.txt

### OUTPUT files Management
##  output back into UI
return_data = 0


### OUTPUT files INTO A SE
copy_data = 1



### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
storage_element = cmssrm.fnal.gov
storage_path = /srm/managerv2?SFN=11/store/user/lnujj/
#user_remote_dir = nTuples_8TeV_53X-v1/

#storage_element=T1_US_FNAL_Buffer
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/resilient/pratima/
### directory or tree of directory under the mounpoint 
#user_remote_dir = WenuJets/WW_PAT


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
#publish_data_name = slhc_r34f16_4mu_pu05
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet 
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
eMail = a.kumar@cern.ch

[GRID]
#
## RB/WMS management:
rb = CERN

## if not using glite and its needed try
#maxtarballsize = 40

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list =

#additional_jdl_parameters = +BigMemoryJob = TRUE
#requirements = BigMemoryNode == TRUE

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

